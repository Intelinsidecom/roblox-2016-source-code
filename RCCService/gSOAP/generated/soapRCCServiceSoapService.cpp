/* soapRCCServiceSoapService.cpp
   Generated by gSOAP 2.8.45 for generated/prototypes.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapRCCServiceSoapService.h"

RCCServiceSoapService::RCCServiceSoapService() : soap(SOAP_IO_DEFAULT)
{	RCCServiceSoapService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

RCCServiceSoapService::RCCServiceSoapService(const RCCServiceSoapService& rhs)
{	soap_copy_context(this, &rhs);
}

RCCServiceSoapService::RCCServiceSoapService(const struct soap &_soap) : soap(_soap)
{ }

RCCServiceSoapService::RCCServiceSoapService(soap_mode iomode) : soap(iomode)
{	RCCServiceSoapService_init(iomode, iomode);
}

RCCServiceSoapService::RCCServiceSoapService(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	RCCServiceSoapService_init(imode, omode);
}

RCCServiceSoapService::~RCCServiceSoapService()
{
	this->destroy();
}

void RCCServiceSoapService::RCCServiceSoapService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://www.w3.org/2003/05/soap-envelope", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://www.w3.org/2003/05/soap-encoding", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"ns1", "http://roblox.com/", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

void RCCServiceSoapService::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void RCCServiceSoapService::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	RCCServiceSoapService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
RCCServiceSoapService *RCCServiceSoapService::copy()
{	RCCServiceSoapService *dup = SOAP_NEW_COPY(RCCServiceSoapService(*(struct soap*)this));
	return dup;
}
#endif

RCCServiceSoapService& RCCServiceSoapService::operator=(const RCCServiceSoapService& rhs)
{	soap_copy_context(this, &rhs);
	return *this;
}

int RCCServiceSoapService::soap_close_socket()
{	return soap_closesock(this);
}

int RCCServiceSoapService::soap_force_close_socket()
{	return soap_force_closesock(this);
}

int RCCServiceSoapService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int RCCServiceSoapService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int RCCServiceSoapService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int RCCServiceSoapService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void RCCServiceSoapService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void RCCServiceSoapService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *RCCServiceSoapService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void RCCServiceSoapService::soap_noheader()
{	this->header = NULL;
}

::SOAP_ENV__Header *RCCServiceSoapService::soap_header()
{	return this->header;
}

#ifndef WITH_NOIO
int RCCServiceSoapService::run(int port)
{	if (!soap_valid_socket(this->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->errnum == 0) // timeout?
				this->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int RCCServiceSoapService::ssl_run(int port)
{	if (!soap_valid_socket(this->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->errnum == 0) // timeout?
				this->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->error;
}
#endif

SOAP_SOCKET RCCServiceSoapService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET RCCServiceSoapService::accept()
{	return soap_accept(this);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int RCCServiceSoapService::ssl_accept()
{	return soap_ssl_accept(this);
}
#endif
#endif

int RCCServiceSoapService::serve()
{
#ifndef WITH_FASTCGI
	this->keep_alive = this->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->keep_alive > 0 && this->max_keep_alive > 0)
			this->keep_alive--;
#endif
		if (soap_begin_serve(this))
		{	if (this->error >= SOAP_STOP)
				continue;
			return this->error;
		}
		if ((dispatch() || (this->fserveloop && this->fserveloop(this))) && this->error && this->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___ns1__HelloWorld(RCCServiceSoapService*);
static int serve___ns1__GetVersion(RCCServiceSoapService*);
static int serve___ns1__GetStatus(RCCServiceSoapService*);
static int serve___ns1__OpenJob(RCCServiceSoapService*);
static int serve___ns1__OpenJobEx(RCCServiceSoapService*);
static int serve___ns1__RenewLease(RCCServiceSoapService*);
static int serve___ns1__Execute(RCCServiceSoapService*);
static int serve___ns1__ExecuteEx(RCCServiceSoapService*);
static int serve___ns1__CloseJob(RCCServiceSoapService*);
static int serve___ns1__BatchJob(RCCServiceSoapService*);
static int serve___ns1__BatchJobEx(RCCServiceSoapService*);
static int serve___ns1__GetExpiration(RCCServiceSoapService*);
static int serve___ns1__GetAllJobs(RCCServiceSoapService*);
static int serve___ns1__GetAllJobsEx(RCCServiceSoapService*);
static int serve___ns1__CloseExpiredJobs(RCCServiceSoapService*);
static int serve___ns1__CloseAllJobs(RCCServiceSoapService*);
static int serve___ns1__Diag(RCCServiceSoapService*);
static int serve___ns1__DiagEx(RCCServiceSoapService*);
static int serve___ns1__HelloWorld_(RCCServiceSoapService*);
static int serve___ns1__GetVersion_(RCCServiceSoapService*);
static int serve___ns1__GetStatus_(RCCServiceSoapService*);
static int serve___ns1__OpenJob_(RCCServiceSoapService*);
static int serve___ns1__OpenJobEx_(RCCServiceSoapService*);
static int serve___ns1__RenewLease_(RCCServiceSoapService*);
static int serve___ns1__Execute_(RCCServiceSoapService*);
static int serve___ns1__ExecuteEx_(RCCServiceSoapService*);
static int serve___ns1__CloseJob_(RCCServiceSoapService*);
static int serve___ns1__BatchJob_(RCCServiceSoapService*);
static int serve___ns1__BatchJobEx_(RCCServiceSoapService*);
static int serve___ns1__GetExpiration_(RCCServiceSoapService*);
static int serve___ns1__GetAllJobs_(RCCServiceSoapService*);
static int serve___ns1__GetAllJobsEx_(RCCServiceSoapService*);
static int serve___ns1__CloseExpiredJobs_(RCCServiceSoapService*);
static int serve___ns1__CloseAllJobs_(RCCServiceSoapService*);
static int serve___ns1__Diag_(RCCServiceSoapService*);
static int serve___ns1__DiagEx_(RCCServiceSoapService*);

int RCCServiceSoapService::dispatch()
{
	soap_peek_element(this);
	if (!soap_match_tag(this, this->tag, "ns1:HelloWorld"))
		return serve___ns1__HelloWorld(this);
	if (!soap_match_tag(this, this->tag, "ns1:GetVersion"))
		return serve___ns1__GetVersion(this);
	if (!soap_match_tag(this, this->tag, "ns1:GetStatus"))
		return serve___ns1__GetStatus(this);
	if (!soap_match_tag(this, this->tag, "ns1:OpenJob"))
		return serve___ns1__OpenJob(this);
	if (!soap_match_tag(this, this->tag, "ns1:OpenJobEx"))
		return serve___ns1__OpenJobEx(this);
	if (!soap_match_tag(this, this->tag, "ns1:RenewLease"))
		return serve___ns1__RenewLease(this);
	if (!soap_match_tag(this, this->tag, "ns1:Execute"))
		return serve___ns1__Execute(this);
	if (!soap_match_tag(this, this->tag, "ns1:ExecuteEx"))
		return serve___ns1__ExecuteEx(this);
	if (!soap_match_tag(this, this->tag, "ns1:CloseJob"))
		return serve___ns1__CloseJob(this);
	if (!soap_match_tag(this, this->tag, "ns1:BatchJob"))
		return serve___ns1__BatchJob(this);
	if (!soap_match_tag(this, this->tag, "ns1:BatchJobEx"))
		return serve___ns1__BatchJobEx(this);
	if (!soap_match_tag(this, this->tag, "ns1:GetExpiration"))
		return serve___ns1__GetExpiration(this);
	if (!soap_match_tag(this, this->tag, "ns1:GetAllJobs"))
		return serve___ns1__GetAllJobs(this);
	if (!soap_match_tag(this, this->tag, "ns1:GetAllJobsEx"))
		return serve___ns1__GetAllJobsEx(this);
	if (!soap_match_tag(this, this->tag, "ns1:CloseExpiredJobs"))
		return serve___ns1__CloseExpiredJobs(this);
	if (!soap_match_tag(this, this->tag, "ns1:CloseAllJobs"))
		return serve___ns1__CloseAllJobs(this);
	if (!soap_match_tag(this, this->tag, "ns1:Diag"))
		return serve___ns1__Diag(this);
	if (!soap_match_tag(this, this->tag, "ns1:DiagEx"))
		return serve___ns1__DiagEx(this);
	if (!soap_match_tag(this, this->tag, "ns1:HelloWorld"))
		return serve___ns1__HelloWorld_(this);
	if (!soap_match_tag(this, this->tag, "ns1:GetVersion"))
		return serve___ns1__GetVersion_(this);
	if (!soap_match_tag(this, this->tag, "ns1:GetStatus"))
		return serve___ns1__GetStatus_(this);
	if (!soap_match_tag(this, this->tag, "ns1:OpenJob"))
		return serve___ns1__OpenJob_(this);
	if (!soap_match_tag(this, this->tag, "ns1:OpenJobEx"))
		return serve___ns1__OpenJobEx_(this);
	if (!soap_match_tag(this, this->tag, "ns1:RenewLease"))
		return serve___ns1__RenewLease_(this);
	if (!soap_match_tag(this, this->tag, "ns1:Execute"))
		return serve___ns1__Execute_(this);
	if (!soap_match_tag(this, this->tag, "ns1:ExecuteEx"))
		return serve___ns1__ExecuteEx_(this);
	if (!soap_match_tag(this, this->tag, "ns1:CloseJob"))
		return serve___ns1__CloseJob_(this);
	if (!soap_match_tag(this, this->tag, "ns1:BatchJob"))
		return serve___ns1__BatchJob_(this);
	if (!soap_match_tag(this, this->tag, "ns1:BatchJobEx"))
		return serve___ns1__BatchJobEx_(this);
	if (!soap_match_tag(this, this->tag, "ns1:GetExpiration"))
		return serve___ns1__GetExpiration_(this);
	if (!soap_match_tag(this, this->tag, "ns1:GetAllJobs"))
		return serve___ns1__GetAllJobs_(this);
	if (!soap_match_tag(this, this->tag, "ns1:GetAllJobsEx"))
		return serve___ns1__GetAllJobsEx_(this);
	if (!soap_match_tag(this, this->tag, "ns1:CloseExpiredJobs"))
		return serve___ns1__CloseExpiredJobs_(this);
	if (!soap_match_tag(this, this->tag, "ns1:CloseAllJobs"))
		return serve___ns1__CloseAllJobs_(this);
	if (!soap_match_tag(this, this->tag, "ns1:Diag"))
		return serve___ns1__Diag_(this);
	if (!soap_match_tag(this, this->tag, "ns1:DiagEx"))
		return serve___ns1__DiagEx_(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve___ns1__HelloWorld(RCCServiceSoapService *soap)
{	struct __ns1__HelloWorld soap_tmp___ns1__HelloWorld;
	_ns1__HelloWorldResponse ns1__HelloWorldResponse;
	ns1__HelloWorldResponse.soap_default(soap);
	soap_default___ns1__HelloWorld(soap, &soap_tmp___ns1__HelloWorld);
	if (!soap_get___ns1__HelloWorld(soap, &soap_tmp___ns1__HelloWorld, "-ns1:HelloWorld", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->HelloWorld(soap_tmp___ns1__HelloWorld.ns1__HelloWorld, ns1__HelloWorldResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__HelloWorldResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__HelloWorldResponse.soap_put(soap, "ns1:HelloWorldResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__HelloWorldResponse.soap_put(soap, "ns1:HelloWorldResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetVersion(RCCServiceSoapService *soap)
{	struct __ns1__GetVersion soap_tmp___ns1__GetVersion;
	_ns1__GetVersionResponse ns1__GetVersionResponse;
	ns1__GetVersionResponse.soap_default(soap);
	soap_default___ns1__GetVersion(soap, &soap_tmp___ns1__GetVersion);
	if (!soap_get___ns1__GetVersion(soap, &soap_tmp___ns1__GetVersion, "-ns1:GetVersion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVersion(soap_tmp___ns1__GetVersion.ns1__GetVersion, ns1__GetVersionResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetVersionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetVersionResponse.soap_put(soap, "ns1:GetVersionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetVersionResponse.soap_put(soap, "ns1:GetVersionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetStatus(RCCServiceSoapService *soap)
{	struct __ns1__GetStatus soap_tmp___ns1__GetStatus;
	_ns1__GetStatusResponse ns1__GetStatusResponse;
	ns1__GetStatusResponse.soap_default(soap);
	soap_default___ns1__GetStatus(soap, &soap_tmp___ns1__GetStatus);
	if (!soap_get___ns1__GetStatus(soap, &soap_tmp___ns1__GetStatus, "-ns1:GetStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetStatus(soap_tmp___ns1__GetStatus.ns1__GetStatus, ns1__GetStatusResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetStatusResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetStatusResponse.soap_put(soap, "ns1:GetStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetStatusResponse.soap_put(soap, "ns1:GetStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__OpenJob(RCCServiceSoapService *soap)
{	struct __ns1__OpenJob soap_tmp___ns1__OpenJob;
	_ns1__OpenJobResponse ns1__OpenJobResponse;
	ns1__OpenJobResponse.soap_default(soap);
	soap_default___ns1__OpenJob(soap, &soap_tmp___ns1__OpenJob);
	if (!soap_get___ns1__OpenJob(soap, &soap_tmp___ns1__OpenJob, "-ns1:OpenJob", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->OpenJob(soap_tmp___ns1__OpenJob.ns1__OpenJob, ns1__OpenJobResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__OpenJobResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__OpenJobResponse.soap_put(soap, "ns1:OpenJobResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__OpenJobResponse.soap_put(soap, "ns1:OpenJobResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__OpenJobEx(RCCServiceSoapService *soap)
{	struct __ns1__OpenJobEx soap_tmp___ns1__OpenJobEx;
	_ns1__OpenJobExResponse ns1__OpenJobExResponse;
	ns1__OpenJobExResponse.soap_default(soap);
	soap_default___ns1__OpenJobEx(soap, &soap_tmp___ns1__OpenJobEx);
	if (!soap_get___ns1__OpenJobEx(soap, &soap_tmp___ns1__OpenJobEx, "-ns1:OpenJobEx", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->OpenJobEx(soap_tmp___ns1__OpenJobEx.ns1__OpenJobEx, ns1__OpenJobExResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__OpenJobExResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__OpenJobExResponse.soap_put(soap, "ns1:OpenJobExResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__OpenJobExResponse.soap_put(soap, "ns1:OpenJobExResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__RenewLease(RCCServiceSoapService *soap)
{	struct __ns1__RenewLease soap_tmp___ns1__RenewLease;
	_ns1__RenewLeaseResponse ns1__RenewLeaseResponse;
	ns1__RenewLeaseResponse.soap_default(soap);
	soap_default___ns1__RenewLease(soap, &soap_tmp___ns1__RenewLease);
	if (!soap_get___ns1__RenewLease(soap, &soap_tmp___ns1__RenewLease, "-ns1:RenewLease", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->RenewLease(soap_tmp___ns1__RenewLease.ns1__RenewLease, ns1__RenewLeaseResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__RenewLeaseResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__RenewLeaseResponse.soap_put(soap, "ns1:RenewLeaseResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__RenewLeaseResponse.soap_put(soap, "ns1:RenewLeaseResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__Execute(RCCServiceSoapService *soap)
{	struct __ns1__Execute soap_tmp___ns1__Execute;
	_ns1__ExecuteResponse ns1__ExecuteResponse;
	ns1__ExecuteResponse.soap_default(soap);
	soap_default___ns1__Execute(soap, &soap_tmp___ns1__Execute);
	if (!soap_get___ns1__Execute(soap, &soap_tmp___ns1__Execute, "-ns1:Execute", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Execute(soap_tmp___ns1__Execute.ns1__Execute, ns1__ExecuteResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ExecuteResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ExecuteResponse.soap_put(soap, "ns1:ExecuteResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ExecuteResponse.soap_put(soap, "ns1:ExecuteResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__ExecuteEx(RCCServiceSoapService *soap)
{	struct __ns1__ExecuteEx soap_tmp___ns1__ExecuteEx;
	_ns1__ExecuteExResponse ns1__ExecuteExResponse;
	ns1__ExecuteExResponse.soap_default(soap);
	soap_default___ns1__ExecuteEx(soap, &soap_tmp___ns1__ExecuteEx);
	if (!soap_get___ns1__ExecuteEx(soap, &soap_tmp___ns1__ExecuteEx, "-ns1:ExecuteEx", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ExecuteEx(soap_tmp___ns1__ExecuteEx.ns1__ExecuteEx, ns1__ExecuteExResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ExecuteExResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ExecuteExResponse.soap_put(soap, "ns1:ExecuteExResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ExecuteExResponse.soap_put(soap, "ns1:ExecuteExResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__CloseJob(RCCServiceSoapService *soap)
{	struct __ns1__CloseJob soap_tmp___ns1__CloseJob;
	_ns1__CloseJobResponse ns1__CloseJobResponse;
	ns1__CloseJobResponse.soap_default(soap);
	soap_default___ns1__CloseJob(soap, &soap_tmp___ns1__CloseJob);
	if (!soap_get___ns1__CloseJob(soap, &soap_tmp___ns1__CloseJob, "-ns1:CloseJob", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CloseJob(soap_tmp___ns1__CloseJob.ns1__CloseJob, ns1__CloseJobResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__CloseJobResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__CloseJobResponse.soap_put(soap, "ns1:CloseJobResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__CloseJobResponse.soap_put(soap, "ns1:CloseJobResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BatchJob(RCCServiceSoapService *soap)
{	struct __ns1__BatchJob soap_tmp___ns1__BatchJob;
	_ns1__BatchJobResponse ns1__BatchJobResponse;
	ns1__BatchJobResponse.soap_default(soap);
	soap_default___ns1__BatchJob(soap, &soap_tmp___ns1__BatchJob);
	if (!soap_get___ns1__BatchJob(soap, &soap_tmp___ns1__BatchJob, "-ns1:BatchJob", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->BatchJob(soap_tmp___ns1__BatchJob.ns1__BatchJob, ns1__BatchJobResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BatchJobResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BatchJobResponse.soap_put(soap, "ns1:BatchJobResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BatchJobResponse.soap_put(soap, "ns1:BatchJobResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BatchJobEx(RCCServiceSoapService *soap)
{	struct __ns1__BatchJobEx soap_tmp___ns1__BatchJobEx;
	_ns1__BatchJobExResponse ns1__BatchJobExResponse;
	ns1__BatchJobExResponse.soap_default(soap);
	soap_default___ns1__BatchJobEx(soap, &soap_tmp___ns1__BatchJobEx);
	if (!soap_get___ns1__BatchJobEx(soap, &soap_tmp___ns1__BatchJobEx, "-ns1:BatchJobEx", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->BatchJobEx(soap_tmp___ns1__BatchJobEx.ns1__BatchJobEx, ns1__BatchJobExResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BatchJobExResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BatchJobExResponse.soap_put(soap, "ns1:BatchJobExResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BatchJobExResponse.soap_put(soap, "ns1:BatchJobExResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetExpiration(RCCServiceSoapService *soap)
{	struct __ns1__GetExpiration soap_tmp___ns1__GetExpiration;
	_ns1__GetExpirationResponse ns1__GetExpirationResponse;
	ns1__GetExpirationResponse.soap_default(soap);
	soap_default___ns1__GetExpiration(soap, &soap_tmp___ns1__GetExpiration);
	if (!soap_get___ns1__GetExpiration(soap, &soap_tmp___ns1__GetExpiration, "-ns1:GetExpiration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetExpiration(soap_tmp___ns1__GetExpiration.ns1__GetExpiration, ns1__GetExpirationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetExpirationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetExpirationResponse.soap_put(soap, "ns1:GetExpirationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetExpirationResponse.soap_put(soap, "ns1:GetExpirationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetAllJobs(RCCServiceSoapService *soap)
{	struct __ns1__GetAllJobs soap_tmp___ns1__GetAllJobs;
	_ns1__GetAllJobsResponse ns1__GetAllJobsResponse;
	ns1__GetAllJobsResponse.soap_default(soap);
	soap_default___ns1__GetAllJobs(soap, &soap_tmp___ns1__GetAllJobs);
	if (!soap_get___ns1__GetAllJobs(soap, &soap_tmp___ns1__GetAllJobs, "-ns1:GetAllJobs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAllJobs(soap_tmp___ns1__GetAllJobs.ns1__GetAllJobs, ns1__GetAllJobsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetAllJobsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetAllJobsResponse.soap_put(soap, "ns1:GetAllJobsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetAllJobsResponse.soap_put(soap, "ns1:GetAllJobsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetAllJobsEx(RCCServiceSoapService *soap)
{	struct __ns1__GetAllJobsEx soap_tmp___ns1__GetAllJobsEx;
	_ns1__GetAllJobsExResponse ns1__GetAllJobsExResponse;
	ns1__GetAllJobsExResponse.soap_default(soap);
	soap_default___ns1__GetAllJobsEx(soap, &soap_tmp___ns1__GetAllJobsEx);
	if (!soap_get___ns1__GetAllJobsEx(soap, &soap_tmp___ns1__GetAllJobsEx, "-ns1:GetAllJobsEx", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAllJobsEx(soap_tmp___ns1__GetAllJobsEx.ns1__GetAllJobsEx, ns1__GetAllJobsExResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetAllJobsExResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetAllJobsExResponse.soap_put(soap, "ns1:GetAllJobsExResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetAllJobsExResponse.soap_put(soap, "ns1:GetAllJobsExResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__CloseExpiredJobs(RCCServiceSoapService *soap)
{	struct __ns1__CloseExpiredJobs soap_tmp___ns1__CloseExpiredJobs;
	_ns1__CloseExpiredJobsResponse ns1__CloseExpiredJobsResponse;
	ns1__CloseExpiredJobsResponse.soap_default(soap);
	soap_default___ns1__CloseExpiredJobs(soap, &soap_tmp___ns1__CloseExpiredJobs);
	if (!soap_get___ns1__CloseExpiredJobs(soap, &soap_tmp___ns1__CloseExpiredJobs, "-ns1:CloseExpiredJobs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CloseExpiredJobs(soap_tmp___ns1__CloseExpiredJobs.ns1__CloseExpiredJobs, ns1__CloseExpiredJobsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__CloseExpiredJobsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__CloseExpiredJobsResponse.soap_put(soap, "ns1:CloseExpiredJobsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__CloseExpiredJobsResponse.soap_put(soap, "ns1:CloseExpiredJobsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__CloseAllJobs(RCCServiceSoapService *soap)
{	struct __ns1__CloseAllJobs soap_tmp___ns1__CloseAllJobs;
	_ns1__CloseAllJobsResponse ns1__CloseAllJobsResponse;
	ns1__CloseAllJobsResponse.soap_default(soap);
	soap_default___ns1__CloseAllJobs(soap, &soap_tmp___ns1__CloseAllJobs);
	if (!soap_get___ns1__CloseAllJobs(soap, &soap_tmp___ns1__CloseAllJobs, "-ns1:CloseAllJobs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CloseAllJobs(soap_tmp___ns1__CloseAllJobs.ns1__CloseAllJobs, ns1__CloseAllJobsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__CloseAllJobsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__CloseAllJobsResponse.soap_put(soap, "ns1:CloseAllJobsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__CloseAllJobsResponse.soap_put(soap, "ns1:CloseAllJobsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__Diag(RCCServiceSoapService *soap)
{	struct __ns1__Diag soap_tmp___ns1__Diag;
	_ns1__DiagResponse ns1__DiagResponse;
	ns1__DiagResponse.soap_default(soap);
	soap_default___ns1__Diag(soap, &soap_tmp___ns1__Diag);
	if (!soap_get___ns1__Diag(soap, &soap_tmp___ns1__Diag, "-ns1:Diag", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Diag(soap_tmp___ns1__Diag.ns1__Diag, ns1__DiagResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DiagResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DiagResponse.soap_put(soap, "ns1:DiagResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DiagResponse.soap_put(soap, "ns1:DiagResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DiagEx(RCCServiceSoapService *soap)
{	struct __ns1__DiagEx soap_tmp___ns1__DiagEx;
	_ns1__DiagExResponse ns1__DiagExResponse;
	ns1__DiagExResponse.soap_default(soap);
	soap_default___ns1__DiagEx(soap, &soap_tmp___ns1__DiagEx);
	if (!soap_get___ns1__DiagEx(soap, &soap_tmp___ns1__DiagEx, "-ns1:DiagEx", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DiagEx(soap_tmp___ns1__DiagEx.ns1__DiagEx, ns1__DiagExResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DiagExResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DiagExResponse.soap_put(soap, "ns1:DiagExResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DiagExResponse.soap_put(soap, "ns1:DiagExResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__HelloWorld_(RCCServiceSoapService *soap)
{	struct __ns1__HelloWorld_ soap_tmp___ns1__HelloWorld_;
	_ns1__HelloWorldResponse ns1__HelloWorldResponse;
	ns1__HelloWorldResponse.soap_default(soap);
	soap_default___ns1__HelloWorld_(soap, &soap_tmp___ns1__HelloWorld_);
	if (!soap_get___ns1__HelloWorld_(soap, &soap_tmp___ns1__HelloWorld_, "-ns1:HelloWorld", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->HelloWorld_(soap_tmp___ns1__HelloWorld_.ns1__HelloWorld, ns1__HelloWorldResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__HelloWorldResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__HelloWorldResponse.soap_put(soap, "ns1:HelloWorldResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__HelloWorldResponse.soap_put(soap, "ns1:HelloWorldResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetVersion_(RCCServiceSoapService *soap)
{	struct __ns1__GetVersion_ soap_tmp___ns1__GetVersion_;
	_ns1__GetVersionResponse ns1__GetVersionResponse;
	ns1__GetVersionResponse.soap_default(soap);
	soap_default___ns1__GetVersion_(soap, &soap_tmp___ns1__GetVersion_);
	if (!soap_get___ns1__GetVersion_(soap, &soap_tmp___ns1__GetVersion_, "-ns1:GetVersion", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetVersion_(soap_tmp___ns1__GetVersion_.ns1__GetVersion, ns1__GetVersionResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetVersionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetVersionResponse.soap_put(soap, "ns1:GetVersionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetVersionResponse.soap_put(soap, "ns1:GetVersionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetStatus_(RCCServiceSoapService *soap)
{	struct __ns1__GetStatus_ soap_tmp___ns1__GetStatus_;
	_ns1__GetStatusResponse ns1__GetStatusResponse;
	ns1__GetStatusResponse.soap_default(soap);
	soap_default___ns1__GetStatus_(soap, &soap_tmp___ns1__GetStatus_);
	if (!soap_get___ns1__GetStatus_(soap, &soap_tmp___ns1__GetStatus_, "-ns1:GetStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetStatus_(soap_tmp___ns1__GetStatus_.ns1__GetStatus, ns1__GetStatusResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetStatusResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetStatusResponse.soap_put(soap, "ns1:GetStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetStatusResponse.soap_put(soap, "ns1:GetStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__OpenJob_(RCCServiceSoapService *soap)
{	struct __ns1__OpenJob_ soap_tmp___ns1__OpenJob_;
	_ns1__OpenJobResponse ns1__OpenJobResponse;
	ns1__OpenJobResponse.soap_default(soap);
	soap_default___ns1__OpenJob_(soap, &soap_tmp___ns1__OpenJob_);
	if (!soap_get___ns1__OpenJob_(soap, &soap_tmp___ns1__OpenJob_, "-ns1:OpenJob", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->OpenJob_(soap_tmp___ns1__OpenJob_.ns1__OpenJob, ns1__OpenJobResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__OpenJobResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__OpenJobResponse.soap_put(soap, "ns1:OpenJobResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__OpenJobResponse.soap_put(soap, "ns1:OpenJobResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__OpenJobEx_(RCCServiceSoapService *soap)
{	struct __ns1__OpenJobEx_ soap_tmp___ns1__OpenJobEx_;
	_ns1__OpenJobExResponse ns1__OpenJobExResponse;
	ns1__OpenJobExResponse.soap_default(soap);
	soap_default___ns1__OpenJobEx_(soap, &soap_tmp___ns1__OpenJobEx_);
	if (!soap_get___ns1__OpenJobEx_(soap, &soap_tmp___ns1__OpenJobEx_, "-ns1:OpenJobEx", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->OpenJobEx_(soap_tmp___ns1__OpenJobEx_.ns1__OpenJobEx, ns1__OpenJobExResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__OpenJobExResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__OpenJobExResponse.soap_put(soap, "ns1:OpenJobExResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__OpenJobExResponse.soap_put(soap, "ns1:OpenJobExResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__RenewLease_(RCCServiceSoapService *soap)
{	struct __ns1__RenewLease_ soap_tmp___ns1__RenewLease_;
	_ns1__RenewLeaseResponse ns1__RenewLeaseResponse;
	ns1__RenewLeaseResponse.soap_default(soap);
	soap_default___ns1__RenewLease_(soap, &soap_tmp___ns1__RenewLease_);
	if (!soap_get___ns1__RenewLease_(soap, &soap_tmp___ns1__RenewLease_, "-ns1:RenewLease", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->RenewLease_(soap_tmp___ns1__RenewLease_.ns1__RenewLease, ns1__RenewLeaseResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__RenewLeaseResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__RenewLeaseResponse.soap_put(soap, "ns1:RenewLeaseResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__RenewLeaseResponse.soap_put(soap, "ns1:RenewLeaseResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__Execute_(RCCServiceSoapService *soap)
{	struct __ns1__Execute_ soap_tmp___ns1__Execute_;
	_ns1__ExecuteResponse ns1__ExecuteResponse;
	ns1__ExecuteResponse.soap_default(soap);
	soap_default___ns1__Execute_(soap, &soap_tmp___ns1__Execute_);
	if (!soap_get___ns1__Execute_(soap, &soap_tmp___ns1__Execute_, "-ns1:Execute", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Execute_(soap_tmp___ns1__Execute_.ns1__Execute, ns1__ExecuteResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ExecuteResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ExecuteResponse.soap_put(soap, "ns1:ExecuteResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ExecuteResponse.soap_put(soap, "ns1:ExecuteResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__ExecuteEx_(RCCServiceSoapService *soap)
{	struct __ns1__ExecuteEx_ soap_tmp___ns1__ExecuteEx_;
	_ns1__ExecuteExResponse ns1__ExecuteExResponse;
	ns1__ExecuteExResponse.soap_default(soap);
	soap_default___ns1__ExecuteEx_(soap, &soap_tmp___ns1__ExecuteEx_);
	if (!soap_get___ns1__ExecuteEx_(soap, &soap_tmp___ns1__ExecuteEx_, "-ns1:ExecuteEx", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ExecuteEx_(soap_tmp___ns1__ExecuteEx_.ns1__ExecuteEx, ns1__ExecuteExResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__ExecuteExResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__ExecuteExResponse.soap_put(soap, "ns1:ExecuteExResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__ExecuteExResponse.soap_put(soap, "ns1:ExecuteExResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__CloseJob_(RCCServiceSoapService *soap)
{	struct __ns1__CloseJob_ soap_tmp___ns1__CloseJob_;
	_ns1__CloseJobResponse ns1__CloseJobResponse;
	ns1__CloseJobResponse.soap_default(soap);
	soap_default___ns1__CloseJob_(soap, &soap_tmp___ns1__CloseJob_);
	if (!soap_get___ns1__CloseJob_(soap, &soap_tmp___ns1__CloseJob_, "-ns1:CloseJob", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CloseJob_(soap_tmp___ns1__CloseJob_.ns1__CloseJob, ns1__CloseJobResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__CloseJobResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__CloseJobResponse.soap_put(soap, "ns1:CloseJobResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__CloseJobResponse.soap_put(soap, "ns1:CloseJobResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BatchJob_(RCCServiceSoapService *soap)
{	struct __ns1__BatchJob_ soap_tmp___ns1__BatchJob_;
	_ns1__BatchJobResponse ns1__BatchJobResponse;
	ns1__BatchJobResponse.soap_default(soap);
	soap_default___ns1__BatchJob_(soap, &soap_tmp___ns1__BatchJob_);
	if (!soap_get___ns1__BatchJob_(soap, &soap_tmp___ns1__BatchJob_, "-ns1:BatchJob", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->BatchJob_(soap_tmp___ns1__BatchJob_.ns1__BatchJob, ns1__BatchJobResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BatchJobResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BatchJobResponse.soap_put(soap, "ns1:BatchJobResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BatchJobResponse.soap_put(soap, "ns1:BatchJobResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__BatchJobEx_(RCCServiceSoapService *soap)
{	struct __ns1__BatchJobEx_ soap_tmp___ns1__BatchJobEx_;
	_ns1__BatchJobExResponse ns1__BatchJobExResponse;
	ns1__BatchJobExResponse.soap_default(soap);
	soap_default___ns1__BatchJobEx_(soap, &soap_tmp___ns1__BatchJobEx_);
	if (!soap_get___ns1__BatchJobEx_(soap, &soap_tmp___ns1__BatchJobEx_, "-ns1:BatchJobEx", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->BatchJobEx_(soap_tmp___ns1__BatchJobEx_.ns1__BatchJobEx, ns1__BatchJobExResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__BatchJobExResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__BatchJobExResponse.soap_put(soap, "ns1:BatchJobExResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__BatchJobExResponse.soap_put(soap, "ns1:BatchJobExResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetExpiration_(RCCServiceSoapService *soap)
{	struct __ns1__GetExpiration_ soap_tmp___ns1__GetExpiration_;
	_ns1__GetExpirationResponse ns1__GetExpirationResponse;
	ns1__GetExpirationResponse.soap_default(soap);
	soap_default___ns1__GetExpiration_(soap, &soap_tmp___ns1__GetExpiration_);
	if (!soap_get___ns1__GetExpiration_(soap, &soap_tmp___ns1__GetExpiration_, "-ns1:GetExpiration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetExpiration_(soap_tmp___ns1__GetExpiration_.ns1__GetExpiration, ns1__GetExpirationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetExpirationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetExpirationResponse.soap_put(soap, "ns1:GetExpirationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetExpirationResponse.soap_put(soap, "ns1:GetExpirationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetAllJobs_(RCCServiceSoapService *soap)
{	struct __ns1__GetAllJobs_ soap_tmp___ns1__GetAllJobs_;
	_ns1__GetAllJobsResponse ns1__GetAllJobsResponse;
	ns1__GetAllJobsResponse.soap_default(soap);
	soap_default___ns1__GetAllJobs_(soap, &soap_tmp___ns1__GetAllJobs_);
	if (!soap_get___ns1__GetAllJobs_(soap, &soap_tmp___ns1__GetAllJobs_, "-ns1:GetAllJobs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAllJobs_(soap_tmp___ns1__GetAllJobs_.ns1__GetAllJobs, ns1__GetAllJobsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetAllJobsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetAllJobsResponse.soap_put(soap, "ns1:GetAllJobsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetAllJobsResponse.soap_put(soap, "ns1:GetAllJobsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__GetAllJobsEx_(RCCServiceSoapService *soap)
{	struct __ns1__GetAllJobsEx_ soap_tmp___ns1__GetAllJobsEx_;
	_ns1__GetAllJobsExResponse ns1__GetAllJobsExResponse;
	ns1__GetAllJobsExResponse.soap_default(soap);
	soap_default___ns1__GetAllJobsEx_(soap, &soap_tmp___ns1__GetAllJobsEx_);
	if (!soap_get___ns1__GetAllJobsEx_(soap, &soap_tmp___ns1__GetAllJobsEx_, "-ns1:GetAllJobsEx", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->GetAllJobsEx_(soap_tmp___ns1__GetAllJobsEx_.ns1__GetAllJobsEx, ns1__GetAllJobsExResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__GetAllJobsExResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetAllJobsExResponse.soap_put(soap, "ns1:GetAllJobsExResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetAllJobsExResponse.soap_put(soap, "ns1:GetAllJobsExResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__CloseExpiredJobs_(RCCServiceSoapService *soap)
{	struct __ns1__CloseExpiredJobs_ soap_tmp___ns1__CloseExpiredJobs_;
	_ns1__CloseExpiredJobsResponse ns1__CloseExpiredJobsResponse;
	ns1__CloseExpiredJobsResponse.soap_default(soap);
	soap_default___ns1__CloseExpiredJobs_(soap, &soap_tmp___ns1__CloseExpiredJobs_);
	if (!soap_get___ns1__CloseExpiredJobs_(soap, &soap_tmp___ns1__CloseExpiredJobs_, "-ns1:CloseExpiredJobs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CloseExpiredJobs_(soap_tmp___ns1__CloseExpiredJobs_.ns1__CloseExpiredJobs, ns1__CloseExpiredJobsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__CloseExpiredJobsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__CloseExpiredJobsResponse.soap_put(soap, "ns1:CloseExpiredJobsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__CloseExpiredJobsResponse.soap_put(soap, "ns1:CloseExpiredJobsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__CloseAllJobs_(RCCServiceSoapService *soap)
{	struct __ns1__CloseAllJobs_ soap_tmp___ns1__CloseAllJobs_;
	_ns1__CloseAllJobsResponse ns1__CloseAllJobsResponse;
	ns1__CloseAllJobsResponse.soap_default(soap);
	soap_default___ns1__CloseAllJobs_(soap, &soap_tmp___ns1__CloseAllJobs_);
	if (!soap_get___ns1__CloseAllJobs_(soap, &soap_tmp___ns1__CloseAllJobs_, "-ns1:CloseAllJobs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CloseAllJobs_(soap_tmp___ns1__CloseAllJobs_.ns1__CloseAllJobs, ns1__CloseAllJobsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__CloseAllJobsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__CloseAllJobsResponse.soap_put(soap, "ns1:CloseAllJobsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__CloseAllJobsResponse.soap_put(soap, "ns1:CloseAllJobsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__Diag_(RCCServiceSoapService *soap)
{	struct __ns1__Diag_ soap_tmp___ns1__Diag_;
	_ns1__DiagResponse ns1__DiagResponse;
	ns1__DiagResponse.soap_default(soap);
	soap_default___ns1__Diag_(soap, &soap_tmp___ns1__Diag_);
	if (!soap_get___ns1__Diag_(soap, &soap_tmp___ns1__Diag_, "-ns1:Diag", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->Diag_(soap_tmp___ns1__Diag_.ns1__Diag, ns1__DiagResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DiagResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DiagResponse.soap_put(soap, "ns1:DiagResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DiagResponse.soap_put(soap, "ns1:DiagResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns1__DiagEx_(RCCServiceSoapService *soap)
{	struct __ns1__DiagEx_ soap_tmp___ns1__DiagEx_;
	_ns1__DiagExResponse ns1__DiagExResponse;
	ns1__DiagExResponse.soap_default(soap);
	soap_default___ns1__DiagEx_(soap, &soap_tmp___ns1__DiagEx_);
	if (!soap_get___ns1__DiagEx_(soap, &soap_tmp___ns1__DiagEx_, "-ns1:DiagEx", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->DiagEx_(soap_tmp___ns1__DiagEx_.ns1__DiagEx, ns1__DiagExResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	ns1__DiagExResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__DiagExResponse.soap_put(soap, "ns1:DiagExResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__DiagExResponse.soap_put(soap, "ns1:DiagExResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
